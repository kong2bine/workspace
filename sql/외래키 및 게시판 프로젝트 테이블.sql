CREATE TABLE BOARD_MEMBER (
	MEM_ID VARCHAR(50) PRIMARY KEY
	, MEM_PW VARCHAR(50) NOT NULL
	, MEM_NAME VARCHAR(50) NOT NULL
	, GENDER VARCHAR(10) -- 'male' 'femaele'
	, MEM_ROLE VARCHAR(20) DEFAULT 'USER'
	
);

-- 임시 회원 데이터
INSERT INTO board_member (MEM_ID, MEM_PW, MEM_NAME, GENDER, MEM_ROLE) 
VALUES ('java', '1111', '김자바', 'male', 'USER');
INSERT INTO board_member (MEM_ID, MEM_PW, MEM_NAME, GENDER, MEM_ROLE) 
VALUES ('admin', '1111', '관리자', 'female', 'ADMIN');

SELECT * FROM board_member;

-- 게시판(회원만 게시글 작성 가능)
CREATE TABLE BOARD (
	BOARD_NUM INT AUTO_INCREMENT PRIMARY KEY
		, TITLE VARCHAR(50) NOT NULL
		, CONTENT VARCHAR(100)
		, MEM_ID VARCHAR(50) REFERENCES BOARD_MEMBER (MEM_ID) -- 외래키
		, CREATE_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- 게시글 임시데이터
INSERT INTO board (TITLE, CONTENT, MEM_ID)
VALUES('1번글', '1번내용', 'java');
INSERT INTO board (TITLE, CONTENT, MEM_ID)
VALUES('2번글', '2번내용', 'java');
INSERT INTO board (TITLE, CONTENT, MEM_ID)
VALUES('3번글', '3번내용', 'admin');
		

-- 댓글 테이블
CREATE TABLE BOARD_REPLY (
	REPLY_NUM INT AUTO_INCREMENT PRIMARY KEY
	, REPLY_CONTENT VARCHAR(50) NOT NULL
	, REPLY_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
	, MEM_ID VARCHAR(50) REFERENCES board_member (MEM_ID)
	, BOARD_NUM INT REFERENCES BOARD (BOARD_NUM)
);

-- 댓글 임시데이터
INSERT INTO board_reply (REPLY_CONTENT, MEM_ID, BOARD_NUM)
VALUES ('댓글1', 'java', 1);
INSERT INTO board_reply (REPLY_CONTENT, MEM_ID, BOARD_NUM)
VALUES ('댓글2', 'java', 2);
INSERT INTO board_reply (REPLY_CONTENT, MEM_ID, BOARD_NUM)
VALUES ('댓글3', 'java', 1);
INSERT INTO board_reply (REPLY_CONTENT, MEM_ID, BOARD_NUM)
VALUES ('댓글4', 'admin', 1);
INSERT INTO board_reply (REPLY_CONTENT, MEM_ID, BOARD_NUM)
VALUES ('댓글5', 'admin', 2);

-- 아이디 중복 여부를 확인하는 쿼리
SELECT MEM_ID
FROM board_member
WHERE MEM_ID = '123456';

SELECT MEM_ID
FROM board_member
WHERE MEM_ID = 'java'
AND MEM_PW = '1111';

SELECT * FROM board_member;

SELECT * FROM board;

DELETE FROM board
WHERE BOARD_NUM = 6;

SELECT BOARD_NUM
	, TITLE
	, CONTENT
	, MEM_ID
	, CREATE_DATE
FROM board
WHERE BOARD_NUM = 1;

SELECT * FROM board_reply;

SELECT REPLY_NUM
	,REPLY_CONTENT
	,MEM_ID
	,REPLY_DATE
FROM board_reply
WHERE BOARD_NUM = 1; 

SELECT * FROM board;
SELECT * FROM board_reply;

DELETE FROM board
WHERE BOARD_NUM = 10;

DELETE FROM board_reply
WHERE BOARD_NUM = 4;

CREATE TABLE TEST_ITEM(
	ITEM_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ITEM_NAME VARCHAR(30) NOT NULL
);

DROP TABLE TEST_ORDER;
DROP TABLE TEST_ITEM;

INSERT INTO TEST_ITEM VALUES (1,'상품1');
INSERT INTO TEST_ITEM VALUES (2,'상품2');
INSERT INTO TEST_ITEM VALUES (3,'상품3');
SELECT * FROM TEST_ITEM;

CREATE TABLE TEST_ORDER (
	ORDER_NUM INT AUTO_INCREMENT PRIMARY KEY
	, BUYER VARCHAR(50) NOT NULL
	, ITEM_CODE INT NOT NULL REFERENCES TEST_ITEM (ITEM_CODE) ON DELETE CASCADE
);
-- 외래키 사용시 NULL 불가능하게 만드려면 NOT NULL조약도 같이 넣어줘야 함

INSERT INTO TEST_ORDER VALUES (1, '김자바', 1);
INSERT INTO TEST_ORDER VALUES (2, '김자바', 1);
INSERT INTO TEST_ORDER VALUES (3, '김자바', 2);
INSERT INTO TEST_ORDER VALUES (4, '김자바', NULL);

SELECT * FROM TEST_ITEM;
SELECT * FROM TEST_ORDER;

DELETE FROM TEST_ORDER WHERE ITEM_CODE = 1;
DELETE FROM TEST_ITEM WHERE ITEM_CODE = 1;


SELECT BOARD_NUM
	,TITLE
	,MEM_ID
	,CREATE_DATE
FROM board
-- WHERE TITLE LIKE '%%'; 
WHERE ${searchType} LIKE CONCAT('%', ${searchValue} , '%') ;

SELECT CONCAT('A', 'B','C','D');